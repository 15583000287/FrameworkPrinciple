css三种引入方式：
	内联样式
	内部样式
	外部样式  <link rel="stylesheet" href="">

选择器：
	标签选择器：
	id选择器：如果要给页面中的某个元素添加样式使用id选择器
	class选择器：
	任意元素选择器：*{}  优先级低  因为选择的范围大
	属性选择器：input[type='text']{ color:red;}
	子孙选择器：div span a / div a
	子元素选择器：div>a  只选择当前元素的下一级指定标签
	分组选择器：.class,#id,p{样式} 可以把多个元素合并成一个
	伪类选择器：
		a:link/visited/hover/active{  //未访问，已访问，悬停时，点击时
			color:red;
		}
		
颜色赋值方式：
	通过颜色名称	red
	通过6位16进制 	#00ff00
	通过3位的16进制赋值	#0f0 等效 #00ff00
	通过3位十进制	rgb(0,255,0)
	通过4位十进制	rgba(0,255,0,0.5)
	
背景图片：
	background-image: url("../day01/d.jpg");
	background-size: 250px 250px;/* 背景颜色尺寸  如果尺寸小于元素尺寸  则会自动重复平铺*/
	background-repeat: no-repeat; /* 禁止重复 */
	控制背景图片位置
		第一种：
			横向位置：left center right
			纵向位置：top center bottom
			例如：center center 
			可以实现九宫格的九个位置
			
		第二种：通过百分比精确控制位置
	 */
	 background-position: 90% 30%;								
	
#盒子模型：
	包括宽，高，内边距，外边距，边框
	宽度计算公式：左外边距+左边框+左内边距+宽度+右内边距+右边框+右外边距
	
元素的宽高：（只能设置块级元素的宽高）
		#注意：行内元素的宽高只能受内容影响，不能直接设置宽高。
外边距：元素距离上级元素边框或相邻兄弟元素边框。
	1.给某个方向外边距单独赋值
	2.批量赋值外边距
		margin: 30px; 四个方向全是30
		margin: 10px 30px; 上下10左右10
		margin: 0 auto; 水平居中（上下0）
		margin: 10px 20px 30px 40px; 上右下左（顺时针）
		
		粘连问题：通过overflow: hidden;超出范围隐藏
		注意:相邻两个元素都设置了上下外边距 ，则取最大值 
		
	行内元素与外边距相关：
		行内元素左右外边距生效，上下不生效
		左右相邻的两个元素，同时存在右外边距和左外边距时取两个值相加之和
		#同时设置上下边距取最大，左右相加
			
边框：
	1.各个方向单独设置 	border: 10px double red;
	2.四个方向同时设置	border-top/button/left/right
	块级元素：四个边加边框全部生效，并且全部影响元素所占宽高
	#行内元素：行内元素四个边加边框全部生效，但是左右边框会影响元素所占宽度 上下边框不影响元素所占高度 
	
#内边距：
	即元素边哭距内容的距离
	块级元素：内边距全部生效并且会影响元素所占宽高
	行内元素：左右影响，上下不影响(上下直接覆盖，并不会顶走上下相邻元素)
	
##块级元素和行内元素关于盒子模型的总结
	1.块级元素(可以设置宽高)
		外边距：全部生效
		内边距：全部生效，影响宽高
		边框：全部生效，影响宽高
	2.行内元素(不可以设置宽高)
		外边距：左右生效，上下不生效
		内边距：全部生效，左右影响宽，上下不影响（直接覆盖，不会顶走上下相邻元素）
		边框：全部生效，左右影响宽，上下不影响高（直接覆盖，不会顶走上下相邻元素）
		
文本相关属性：
	文本对齐方式： text-align:center;  
	文本修饰：text-decoration:underline;
		underline; 下划线
		overline; 上划线
		line-through; 删除线
		none 无(去掉超链接的下划线)
	文本颜色：color:green;
	文本阴影：text-shadow:red 5px 5px 1px; 阴影颜色，2和3阴影偏移坐标，阴影模程度值(越大越模糊)
	文本行高：line-height: 50px; 用于实现上下居中，把行高设置成div高度
	
字体相关：
	字体大小： font-size:20px;  单位像素
	字体粗细：  font-weight: bold;   bold 加粗    normal 默认效果
	斜体：  font-style: italic;
	字体名称 ：  font-family: Microsoft YaHei,xxx,xxx,Arial; 可以赋值多个 依次检测 哪个可以用就用哪个
		
# # # # # # # # # # # # # # # # # # # # # # # # #
溢出设置：overflow: visible        				#
	 scroll(滚动显示)								#
	 hidden(隐藏) 								#
	 visible(默认的全部显示)						#
显示方式：display:none								#
	block(块级元素的默认值   把元素变成块级元素，好设置长宽)	#
	inline:行内元素的默认值							#
	inline-block:行内块   可以修改宽高，也可以共占一行		#
												#
p标签自带外边距。 若不想要则设置 margin:0;            	#
# # # # # # # # # # # # # # # # # # # # # # # # #




###定位
position定位：
	文档流定位：(静态定位)默认是文档流定位
		--设置方式：position:static
	#相对定位：(不脱离文档流，相对于本身)
		--position:relative  
		相对定位不会脱离文档流，不影响其他元素的位置，通过上右下左让元素相对于元素初始位置做偏移
		应用场景：存在于页面中的元素如果需要做位置移动，但是不希望页面中的其他元素跟着移动
	#绝对定位：(脱离文档流，相对于窗口，或相对于做过非static定位（推荐相对定位，不影响其他元素）的祖先元素 )
		--position:absolute
		应用场景：当元素需要层叠显示，且不希望存在于稳定流中
	#固定定位：(脱离文档流，相对于窗口)
		--position:fixed
		元素固定在窗口的某个位置，不会因为内容位置的改变而改变自身的额位置
	#浮动定位：(元素脱离文档流)
		--float:left/right
		如果一行浮动元素装不下就自动换行，可能会被卡住；
		元素两边不许有浮动元素：clear:both
		当元素全部浮动，自动识别高度为0  
			解决办法：1.为元素加高度   2.overflow:hidden;
			
###行内元素垂直对齐方式
	垂直对齐方式 vertical-align: baseline;
			 baseline默认  基线对齐
			 top 上对其
			 middle 居中
			 bottom 下对齐
			 
###css三大特性：
继承性，层叠性，优先级

