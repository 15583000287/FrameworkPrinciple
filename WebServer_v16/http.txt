HTTP协议 --- 超文本传输协议
是浏览器与服务器之间通讯的应用层协议。而HTTP协议要求底层的传输层协议为可靠传输协议，通常使用的tcp协议。

HTTP协议规定了客户端与服务器之间的通讯方式，以及数据格式等定义。
其中，HTTP协议要求客户端与服务器发送的数据中的字符部分所允许的字符集为：ISO8859-1 这是一个欧洲编码集，其中不支持中文。
所以我们在HTTP协议使用中客户端与服务器发送的数据都不会直接包含中文字符。

通讯方式的规则：
HTTP协议要求客户端与服务器端的通讯为：一问一答的方式 
即：客户端发起请求(request),服务端处理请求后予以响应(response)
所以在HTTP协议中，服务端永远不会主动发送数据给客户端。

HTTP1.0协议中，通讯为：
客户端发起TCP与服务端建立连接，然后发送一个请求，当服务端处理该请求并予以相应后即断开TCP连接。
HTTP1.1协议则改变为建立TCP连接后，可以进行多次请求与相应后再最终断开连接。
对于现在的网络应用中，构建一个复杂页面需要客户端经历多次请求才能得到，对此HTTP1.1协议更高效并节约资源。

HTTP请求
	请求是客户端发送给服务器端的内容。
	一个请求由三部分组成：请求行，消息头，消息正文
		请求行：请求行是一行字符串，HTTP协议规定了一行字符串的结束是以（CRLF）结尾
			CR:回车符 ASC编码对应值：13
			LF:换行符ASC编码对应值：10
			
			请求行内容分为3部分：
				Method Url Protocol(CRLF)
				请求方式  请求资源   协议版本
				例如：
					GET /index.html HTTP/1.1
			消息头：
				消息头由若干行组成。是客户端发送给服务器端的一些附加信息。
				有的是用来告知服务器端当前客户端自身的信息(比如使用什么浏览器，我们操作系统是什么等)
				有的是用来维持通讯的一些处理操作信息等等。
				每一个消息头由一行组成，格式：
				name:value（CRLE）
				
				注：消息头结束是以单独的CRLF表示，即：最后一个消息头发送完毕后，客户端会单独再发送一个CRLF表示消息头部分结束。
				例如：
					Host: localhost:8088
					Connection: keep-alive
					Cache-Control: max-age=0
					Upgrade-Insecure-Requests: 1
					User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.119 Safari/537.36
					Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8
					Accept-Encoding: gzip, deflate, br
					Accept-Language: zh-CN,zh;q=0.9（CRLE）（CRLE） 此处还有两个换行
			
			消息正文：		
				一个请求中可以不含有消息正文。消息正文是2进制数据，是用户提交给服务端的数据。
				它可能是一个表单数据(用户在页面输入的注册信息等)，也可能是附件等。
				
一个请求内容大致为：
	GET /index.html HTTP/1.1
	Host: localhost:8088
	Connection: keep-alive
	Cache-Control: max-age=0
	Upgrade-Insecure-Requests: 1
	User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.119 Safari/537.36
	Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8
	Accept-Encoding: gzip, deflate, br
	Accept-Language: zh-CN,zh;q=0.9
	

